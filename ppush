#!/bin/bash

# print the list of configs from config file
get_configs()
{
    config_filename=$1
    awk -F '[][]' '
      NF==3 && $0 ~ /^\[.*\]/ { print $2 }
   ' ${config_filename}
}

# set variables (optionaly prefixed by var_prefix) from config in config file
set_config_vars()
{
   typeset config=$1
   typeset var_prefix=$2
   typeset config_filename=$3
   typeset config_vars

   config_vars=$( 
        awk -F= -v Config="${config}" -v Prefix="${var_prefix}" '
        BEGIN { 
           Config = toupper(Config);
           patternConfig = "\\[" Config "]";
        }
        toupper($0)  ~ patternConfig,(/\[/ && toupper($0) !~ patternConfig)  { 
           if (/\[/ || NF <2) next;
           sub(/^[[:space:]]*/, "");
           sub(/[[:space:]]*=[[:space:]]/, "=");
           print Prefix $0;
        } ' ${config_filename} )

   eval "${config_vars}"
}

get_pusher_config()
{
    config_section=$1
    config_filename=$2
    for cfg in $(get_configs ${config_filename})
    do
        if [ "${config_section}" == "${cfg}" ]
        then
            unset $(set | awk -F= '/^cfg_/  { print $1 }') cfg_
            set_config_vars ${cfg} cfg_ ${config_filename}
            set | grep ^cfg_
        fi
    done
}


if [ "$1" == "--push" ]; then
    PUSHER_NAME=$2
    REPO_ROOT=$3
    OPTIONS=$4||""
    source "$HOME/.ppush/pusher"
    echo "Retrieving repo from master node..."
    scp $master_username@$master_hostname:"/home/$master_username/.ppush/master" /tmp/ppush-master
    PUSHER_CONFIG=`get_pusher_config $PUSHER_NAME /tmp/ppush-master`
    # echo $PUSHER_CONFIG
    eval $PUSHER_CONFIG
    mkdir -p /tmp/ppush/$PUSHER_NAME
    scp -qr $master_username@$master_hostname:$REPO_ROOT /tmp/ppush/$PUSHER_NAME
    cd /tmp/ppush/$PUSHER_NAME/
    ls /tmp/ppush/$PUSHER_NAME/
    cd $(ls -d * | head -n 1)
    echo "Pushing to remote..."
    # echo "$cfg_push_command $OPTIONS"
    eval "$cfg_push_command $OPTIONS"
    rm /tmp/ppush-master
    rm -rf /tmp/ppush/$PUSHER_NAME
    echo Done
    exit 1
elif [ "$1" == "--pull" ]; then
    PUSHER_NAME=$2
    REPO_ROOT=$3
    OPTIONS=$4||""
    source "$HOME/.ppush/pusher"
    echo "Retrieving repo from master node..."
    scp $master_username@$master_hostname:"/home/$master_username/.ppush/master" /tmp/ppush-master
    PUSHER_CONFIG=`get_pusher_config $PUSHER_NAME /tmp/ppush-master`
    eval $PUSHER_CONFIG
    mkdir -p /tmp/ppush/$PUSHER_NAME
    scp -qr $master_username@$master_hostname:$REPO_ROOT /tmp/ppush/$PUSHER_NAME
    cd /tmp/ppush/$PUSHER_NAME/
    REPODIR=$(ls -d * | head -n 1)
    cd REPODIR
    REPOPATH="$PWD"
    echo "Pulling from remote..."
    eval "$cfg_pull_command $OPTIONS"
    echo "Copying pulled repo in /tmp/ppush/$PUSHER_NAME/ back to master node $REPO_ROOT..."
    scp -qr $REPOPATH "$master_username@$master_hostname:$REPO_ROOT/"
    rm /tmp/ppush-master
    rm -rf /tmp/ppush/$PUSHER_NAME
    echo Done
    exit 1
else
    PUSHER_NAME=$1
    PPUSH_MODE=$2||"push"
    OPTIONS=$3||""
    REPO_ROOT="$(git rev-parse --show-toplevel)"
    PUSHER_CONFIG=`get_pusher_config $PUSHER_NAME $HOME/.ppush/master`
    eval $PUSHER_CONFIG
    echo "Asking $PUSHER_NAME to $PPUSH_MODE..."
    if [ "$PPUSH_MODE" == "push" ]; then
        ssh_command="ssh $cfg_username@$cfg_hostname -t '$cfg_script_path --push $PUSHER_NAME $REPO_ROOT \"$OPTIONS\"'"
    elif [ "$PPUSH_MODE" == "pull" ]; then
        ssh_command="ssh $cfg_username@$cfg_hostname -t '$cfg_script_path --pull $PUSHER_NAME $REPO_ROOT \"$OPTIONS\"'"
    fi
    echo $ssh_command
    eval $ssh_command
    exit 1
fi
